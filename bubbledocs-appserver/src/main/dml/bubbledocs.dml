package pt.tecnico.bubbledocs.domain;

//------------------ ES Stuff -------------------------

enum AcessMode as acessMode;

// Class represents the system.
class Bubbledocs{
	int uniqueId;
}

// Class represents user
class User{
	String name;
	String username;
	String password;
}

class AcessType{
	acessMode mode;
}

class Session{
	LocalTime loginTime;
	String name;
	String token;
}

//------------------ PO Stuff -------------------------

class SpreadSheet{
	int id;
	String name;
	LocalDate creationDate;
	int lines;
	int columns;
}

class Content{
	int resultado;
}

class NumberInt extends Content;

class Reference extends Content{
	int line;
	int column;
}

class Cell{
	boolean protect;
	int line;
	int column;
}

class Function extends Content;

class BinaryFunction extends Function;

class IntervalFunction extends Function{
	int top;
	int bottom;
	int left;
	int right;
}

class ADD extends BinaryFunction;

class SUB extends BinaryFunction;

class MUL extends BinaryFunction;

class DIV extends BinaryFunction;

class AVG extends IntervalFunction;

class PRD extends IntervalFunction;

//====================================================
//================ Relations ==========================


// DomainRoot object is Bubbledocs.
relation RootHasBubbledocs{
	.pt.ist.fenixframework.DomainRoot playsRole root{
		multiplicity 0..1;
	}
	Bubbledocs playsRole bubbledocs{
		multiplicity 1;
	}
}

// Bubbledocs has 0 or more users.
relation BubbledocsHasUsers{
	Bubbledocs playsRole bubbledocsUtilizadores{
		multiplicity 1;
	}
	User playsRole utilizador{
		multiplicity *;
	}
}

// Bubbledocs has 0 or more spreasheets
relation BubbledocsHasFolhas{
	Bubbledocs playsRole bubbledocsFolhas{
		multiplicity 1;
	}
	SpreadSheet playsRole folhaCalculo{
		multiplicity 0..*;
	}
}

// Each spreadsheet has a owner, but an user
// can handle 0 or more spreadsheets.
relation FolhasHasOwner{
	SpreadSheet playsRole owned{
		multiplicity 0..*;
	}
	User playsRole owner{
		multiplicity 1;
	}
}

// An user has a set of AcessType 
// one for each spreadsheet.
relation UtilizadorHasTiposAcesso{
	User playsRole uses{
		multiplicity 1;
	}
	AcessType playsRole usedBy{
		multiplicity 0..*;
	}
}

// One SpreadSheet can has 0 or more
// accessTypes one for each user.
relation TipoAcessoHasFolhaCalculo{
	AcessType playsRole tipo{
		multiplicity 0..*;
	}
	SpreadSheet playsRole folha{
		multiplicity 1;
	}
}

// Bubbledocs has 0 or more sessions at the moment.
relation BubbleDocsHasSessions{
	Bubbledocs playsRole bubble{
		multiplicity 1;
	}
	Session playsRole session{
		multiplicity 0..*;
	}
}


// ############ SpreadSheet Structure ##############

// Spreadsheet hos 0 or more cells.
relation FolhaCalculoHasCell{
	SpreadSheet playsRole fc{
		multiplicity 1;
	}
	Cell playsRole cel{
		multiplicity 0..*;
	}
}

// Cell has a content.
relation CellHasContent{
	Cell playsRole Cell{
		multiplicity 1;
	}
	Content playsRole Content{
		multiplicity 1;
	}
}

// 
relation ReferenceHasCell{
	Reference playsRole Reference{
		multiplicity 1;
	}
	Cell playsRole refCell{
		multiplicity 0..1;
	}
}

// 1ยบ BinaryFucntion argument.
relation FuncaoBinariaFirstArgument{
	BinaryFunction playsRole funcaoBinaria1{
		multiplicity 1;
	}
	Content playsRole argument1{
		multiplicity 1;
	}
}

// 2ยบ BinaryFunction argument.
relation FuncaoBinariaSecondArgument{
	BinaryFunction playsRole funcaoBinaria2{
		multiplicity 1;
	}
	Content playsRole argument2{
		multiplicity 1;
	}
}

// IntervalFunction argument.
relation FuncaoIntervaloArgument{
	IntervalFunction playsRole funcaoIntervalo{
		multiplicity 1;
	}
	Content playsRole argument{
		multiplicity 0..*;
	}
}


//----------------------- END -----------------------
