package pt.tecnico.bubbledocs.domain;

//------------------ ES Stuff -------------------------

enum AccessMode as AccessMode;

// Class represents the system.
class Bubbledocs{
	int uniqueId;
}

// Class represents user
class User{
	String name;
	String username;
	String password;
	String email;
}

class Permission{
	AccessMode mode;
}

class Session{
	LocalTime loginTime;
	String name;
	String token;
	int MAX_LOGIN_TIME_MINUTES;
}

//------------------ PO Stuff -------------------------

class SpreadSheet{
	int id;
	String name;
	LocalDate creationDate;
	int lines;
	int columns;
}

class Content;

class Literal extends Content{
	int value;
}

class Reference extends Content{
	int line;
	int column;
}

class Cell{
	boolean protect;
	int line;
	int column;
}

class Function extends Content;

class BinaryFunction extends Function;

class IntervalFunction extends Function{
	int top;
	int bottom;
	int left;
	int right;
}

class ADD extends BinaryFunction;

class SUB extends BinaryFunction;

class MUL extends BinaryFunction;

class DIV extends BinaryFunction;

class AVG extends IntervalFunction;

class PRD extends IntervalFunction;

//====================================================
//================ Relations ==========================


// DomainRoot object is Bubbledocs.
relation RootHasBubbledocs{
	.pt.ist.fenixframework.DomainRoot playsRole root{
		multiplicity 0..1;
	}
	Bubbledocs playsRole bubbledocs{
		multiplicity 1;
	}
}

// Bubbledocs has 0 or more users.
relation BubbledocsHasUsers{
	Bubbledocs playsRole bubbledocsUsers{
		multiplicity 1;
	}
	User playsRole user{
		multiplicity *;
	}
}

// Bubbledocs has 0 or more spreasheets
relation BubbledocsHasSpreadsheets{
	Bubbledocs playsRole bubbledocsSpreadsheets{
		multiplicity 1;
	}
	SpreadSheet playsRole bubbleSpreadsheet{
		multiplicity 0..*;
	}
}

// Each spreadsheet has a owner, but an user
// can handle 0 or more spreadsheets.
relation SpreadsheetHasOwner{
	SpreadSheet playsRole owned{
		multiplicity 0..*;
	}
	User playsRole owner{
		multiplicity 1;
	}
}

// An user has a set of Permissions 
// one for each spreadsheet.
relation UserHasOnePermissionPerSpreadsheet{
	User playsRole uses{
		multiplicity 1;
	}
	Permission playsRole usedBy{
		multiplicity 0..*;
	}
}

// One SpreadSheet can has 0 or more
// accessTypes one for each user.
relation SpreadSheetHasMultipleUserPermissions{
	Permission playsRole permission{
		multiplicity 0..*;
	}
	SpreadSheet playsRole spreadsheet{
		multiplicity 1;
	}
}

// Bubbledocs has 0 or more sessions at the moment.
relation BubbleDocsHasSessions{
	Bubbledocs playsRole bubble{
		multiplicity 1;
	}
	Session playsRole session{
		multiplicity 0..*;
	}
}


// ############ SpreadSheet Structure ##############

// Spreadsheet has 0 or more cells.
relation SpreadsheetHasCell{
	SpreadSheet playsRole fc{
		multiplicity 1;
	}
	Cell playsRole cell{
		multiplicity 0..*;
	}
}

// Cell has a content.
relation CellHasContent{
	Cell playsRole Cell{
		multiplicity 1;
	}
	Content playsRole Content{
		multiplicity 1;
	}
}

// Reference has a Cell.
relation ReferenceHasCell{
	Reference playsRole reference{
		multiplicity 1;
	}
	Cell playsRole refCell{
		multiplicity 0..1;
	}
}

// 1ยบ BinaryFunction argument.
relation BinaryFunctionFirstArgument{
	BinaryFunction playsRole binaryFunction1{
		multiplicity 1;
	}
	Content playsRole argument1{
		multiplicity 1;
	}
}

// 2ยบ BinaryFunction argument.
relation BinaryFunctionSecondArgument{
	BinaryFunction playsRole binaryFunction2{
		multiplicity 1;
	}
	Content playsRole argument2{
		multiplicity 1;
	}
}

// IntervalFunction argument.
relation IntervalFunctionArgument{
	IntervalFunction playsRole intervalFunction{
		multiplicity 1;
	}
	Content playsRole argument{
		multiplicity 0..*;
	}
}


//----------------------- END -----------------------
